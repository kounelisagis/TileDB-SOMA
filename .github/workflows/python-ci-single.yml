# This is a reusable workflow
# (https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow),
# called by python-ci-full.yml and python-ci-minimal.yml.

name: TileDB-SOMA Python CI

on:
  workflow_call:
    inputs:
      python_version:
        required: true
        type: string
      os:
        required: true
        type: string
      cc:
        required: false
        type: string
      cxx:
        required: false
        type: string
      report_codecov:
        required: true
        type: boolean
      run_lint:
        required: false
        type: boolean
        default: false

jobs:
  lint:
    if: inputs.run_lint
    runs-on: ${{ inputs.os }}
    steps:
    - name: Checkout TileDB-SOMA
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}
        cache: pip
        cache-dependency-path: ./.github/workflows/python-ci-single.yml

    - name: Restore pre-commit cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ inputs.os }}-${{ inputs.python_version }}-${{ hashFiles('.github/workflows/python-ci-single.yml', '.pre-commit-config.yaml') }}

    - name: Check cache hash keys
      run: |
        setup_python_hash="$(scripts/hash-files.py .github/workflows/python-ci-single.yml)"
        echo "Expected setup-python hash key: $setup_python_hash"
        echo ""
        actions_cache_hash="$(scripts/hash-files.py .github/workflows/python-ci-single.yml .pre-commit-config.yaml)"
        echo "Expected actions/cache hash key: $actions_cache_hash"
        echo ""
        setup_py_hash="$(scripts/hash-files.py apis/python/setup.py)"
        echo "Should NOT see: $setup_py_hash"
        echo ""

    - name: Install pre-commit
      run: python -m pip -v install pre-commit

    - name: Log pip dependencies
      run: python -m pip list

    - name: Run pre-commit hooks on all files
      run: pre-commit run -a -v

    # Skip files in apis/r/src which are:
    # * nanoarrow.c/h
    # * Auto-generated by Rcpp
    # * Things which Dirk doesn't want to be format-checked
    - name: Check C++ Format
      shell: bash
      run: ./scripts/run-clang-format.sh . clang-format 0 $(find libtiledbsoma apis/python/src -name "*.cc" -or -name "*.cpp" -or -name "*.h" | grep -v external)
